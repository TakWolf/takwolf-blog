<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[TakWolf]]></title>
  <subtitle><![CDATA[精神病一样编码 - Coding like a psychopath, oh ye~]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.takwolf.com/"/>
  <updated>2014-11-27T17:50:39.292Z</updated>
  <id>http://blog.takwolf.com/</id>
  
  <author>
    <name><![CDATA[TakWolf]]></name>
    <email><![CDATA[takwolf@foxmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[重新制作了主页，Just Author Home Page]]></title>
    <link href="http://blog.takwolf.com/2014/11/28/new-just-author-home-page/"/>
    <id>http://blog.takwolf.com/2014/11/28/new-just-author-home-page/</id>
    <published>2014-11-27T17:39:07.000Z</published>
    <updated>2014-11-27T17:50:33.000Z</updated>
    <content type="html"><![CDATA[<p>新主页更换，浏览地址</p>
<p><a href="http://takwolf.com" target="_blank" rel="external">http://takwolf.com</a></p>
<p>还是喜欢简洁的风格，之前的控制台移动到这个地址了：</p>
<p><a href="http://takwolf.com/console" target="_blank" rel="external">http://takwolf.com/console</a></p>
<p>代码依然托管在Github上，使用注意替换成你自己的信息：</p>
<p><a href="https://github.com/TakWolf/Just-Author-Home-Page" target="_blank" rel="external">https://github.com/TakWolf/Just-Author-Home-Page</a></p>
<p>就是这样，have fun~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>新主页更换，浏览地址</p>
<p><a href="http://takwolf.com" target="_blank" rel="external">http://takwolf.com</a></p>
<p>还是喜欢简洁的风格，之前的控制台移动到这个地址了：</p>]]>
    </summary>
    
      <category term="吐槽" scheme="http://blog.takwolf.com/tags/tucao/"/>
    
      <category term="新主页" scheme="http://blog.takwolf.com/tags/%E6%96%B0%E4%B8%BB%E9%A1%B5/"/>
    
      <category term="html5" scheme="http://blog.takwolf.com/tags/html5/"/>
    
      <category term="web" scheme="http://blog.takwolf.com/tags/web/"/>
    
      <category term="吐槽" scheme="http://blog.takwolf.com/categories/tucao/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Ruby学习笔记】在Windows上搭建Ruby on Rails环境]]></title>
    <link href="http://blog.takwolf.com/2014/11/26/ruby-study-setup-ruby-on-windows/"/>
    <id>http://blog.takwolf.com/2014/11/26/ruby-study-setup-ruby-on-windows/</id>
    <published>2014-11-26T14:31:15.000Z</published>
    <updated>2014-11-26T16:41:05.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>这篇文章主要记录一些我个人在Windows上搭建Ruby on Rails开发环境时遇到的一些问题以及解决方案。</p>
<a id="more"></a>

<p>社区中经常有对在Windows环境上开发Ruby有看法，因为大多数Ruby开发者来自于Linux，听他们说，Ruby在Windows上体验极其糟糕。或许是一种社区的通病吧，许多Linux开发者常常对Windows环境不削一顾，而Windows开发者也瞧不上Linux，但是奇怪的是大家都一致认同Mac是最好的开发环境。</p>
<p>本人只有一台电脑，运行着Windows。我在Windows上有着很多重要的环境和工具。我不可能因为仅仅要去学习一门语言而放弃Windows（尽管Ruby十分吸引我）。屌丝一枚，没钱也没有肾取购买Mac。有些时候并不是我想，而是不得不使用Windows。</p>
<p>尽管社区很多人在警告Ruby初学者不要在Windows上尝试Ruby，但是从我实际的体验上来说，Windows上运行Ruby并没有想象的哪么糟糕，环境配置十分简单，虽然遇到一些问题，但是基本上很顺利就解决了。</p>
<p>如果你跟我一样，想去学习Ruby，但是只有Windows环境，请不要被吓到，大胆的去尝试。分享一些我的环境搭建经验，希望能够帮助到你。</p>
<h2 id="安装Git">安装Git</h2>
<p><a href="http://git-scm.com/download/" target="_blank" rel="external">http://git-scm.com/download/</a></p>
<p>下载Windows上的版本git-scm，安装十分简单，不做详细介绍。注意勾选添加环境变量到path。</p>
<p>严格来说，git并非Ruby和Rails开发的必备品，你不必非要使用git。但是Ruby大多使用git来管理项目，通过git来进行云端部署也是Rails常见的做法。Github作为流行的开源社区已经使git成为程序猿的一个必修技能了。我建议你还是要安装git。</p>
<p>除此之外，还有一个更重要的原因是，Ruby的开发严重依赖于命令行。公认Windows的cmd十分的不好用，使用cmd来开发Ruby绝对会让你抓狂。而git一般会附带一个Bash shell（比如上面的git-scm），十分的好用，可以作为cmd的一个完全的替代品。关于这一点，我相信你会在之后的学习中深深理解的。</p>
<h2 id="安装Ruby">安装Ruby</h2>
<p>安装Ruby，我们使用RubyInstaller，地址在：</p>
<p><a href="http://rubyinstaller.org/downloads/" target="_blank" rel="external">http://rubyinstaller.org/downloads/</a></p>
<p>这是官方推荐的Ruby环境安装工具。笔者下载的是当前最新的版本<a href="http://dl.bintray.com/oneclick/rubyinstaller/rubyinstaller-2.1.5.exe?direct" target="_blank" rel="external">Ruby2.1.5</a>。笔者是64位电脑，但是选择的不是64位的安装包。我也建议你不要安装64位的，至于原因，后面会有解释。</p>
<p>安装很简单，注意的是勾选添加环境变量到path。</p>
<p>安装之后，打开bash，输入：</p>
<pre><code>$ <span class="keyword">ruby</span> -<span class="keyword">v</span>
</code></pre><p>提示版本号，表明安装成功</p>
<h2 id="安装RubyRems">安装RubyRems</h2>
<p>gem是Ruby上很重要的一个工具，基本上所有的Ruby工具集都通过gem来管理。他的功能和NodeJs中的npm差不多。</p>
<p>RubyGems下载地址：</p>
<p><a href="http://rubygems.org/pages/download" target="_blank" rel="external">http://rubygems.org/pages/download</a></p>
<p>下载后解压到一个目录，打开bash，输入命令</p>
<pre><code>$ <span class="keyword">cd</span> &lt;your gem path&gt;
$ <span class="keyword">ruby</span> setup.rb
</code></pre><p>等提示success之后输入命令</p>
<pre><code><span class="variable">$ </span>gem -v
</code></pre><p>出现版本号表明安装成功</p>
<h2 id="安装DevKit">安装DevKit</h2>
<p>首先解释一下什么是DevKit。Ruby的工具集都是通过gem管理的，很多都是以源代码发行的，而且涉及和C相关的部分。DevKit实际上就是帮助这些源代码在Windows上进行编译的工具。如果不安装，在安装某些Ruby工具的时候可能会提示类似下面的错误：</p>
<pre><code>Please update your PATH <span class="built_in">to</span> <span class="built_in">include</span> build tools <span class="operator">or</span> download <span class="operator">the</span> DevKit <span class="built_in">from</span> <span class="string">'http://rubyinstaller.org/downloads'</span> <span class="operator">and</span> follow <span class="operator">the</span> instructions <span class="keyword">at</span> <span class="string">'http://github.com/oneclick/rubyinstaller/wiki/Development-Kit'</span>
</code></pre><p>这是因为没有安装DevKit的缘故。</p>
<p>回到刚才的<a href="http://rubyinstaller.org/downloads/" target="_blank" rel="external">RubyInstall</a>页面：</p>
<p><a href="http://rubyinstaller.org/downloads/" target="_blank" rel="external">http://rubyinstaller.org/downloads/</a></p>
<p>在页面底部找到DevKit下载，笔者选择的是<a href="http://cdn.rubyinstaller.org/archives/devkits/DevKit-mingw64-32-4.7.2-20130224-1151-sfx.exe" target="_blank" rel="external">For use with Ruby 2.0 and 2.1 (32bits version only)</a>，我这里选择的也是32位版本，和Ruby匹配。</p>
<p>下载之后是个自解压文件，运行自解压，然后打开bash，输入命令：</p>
<pre><code>$ <span class="keyword">cd</span> &lt;your devkit path&gt;
$ <span class="keyword">ruby</span> dk.rb init
</code></pre><p>这时候目录下会生成config.yml文件，表示初始化成功，之后输入命令：</p>
<pre><code>$ <span class="keyword">ruby</span> dk.rb install
</code></pre><p>没问题的话，一堆命令之后会提示success</p>
<p>要注意的是，DevKit仅支持通过RubyInstall安装的Ruby环境</p>
<h2 id="安装Rails">安装Rails</h2>
<p>打开Bash输入命令：</p>
<pre><code><span class="variable">$ </span>gem install rails
</code></pre><p>一堆命令之后，输入：</p>
<pre><code><span class="variable">$ </span>rails -v
</code></pre><p>提示版本号表明安装成功</p>
<h2 id="一个小问题">一个小问题</h2>
<p>你可能发现，我们之前每次输入命令都会有一句提示，例如：</p>
<pre><code>$ rails -v
DL <span class="keyword">is</span> deprecated, please <span class="keyword">use</span> Fiddle
Rails <span class="number">4.1</span><span class="number">.8</span>
</code></pre><p>这里第二行其实是一个警告，产生的原因是Ruby和Windows环境的兼容的问题。但是实际上并不影响我们使用，因此解决的方案就是，当做没看见吧。</p>
<h2 id="HelloWorld">HelloWorld</h2>
<p>激动的时刻就要来啦，我们找一个目录，作为Ruby项目的存放目录，我这里假如这个目录是workspace，输入命令：</p>
<pre><code>$ <span class="keyword">cd</span> ~/workspace
$ rails <span class="keyword">new</span> hellp_world
</code></pre><p>命令提示首先在hello_world目录下创建了一堆文件，然后执行了bundle install命令，开始安装并下载组件</p>
<p>等一切完成之后，输入命令：</p>
<pre><code><span class="variable">$ </span>cd hello_world
<span class="variable">$ </span>rails server
</code></pre><p>会有如下提示：</p>
<pre><code>=<span class="ruby">&gt; <span class="constant">Booting</span> <span class="constant">WEBrick</span>
</span>=<span class="ruby">&gt; <span class="constant">Rails</span> <span class="number">4.1</span>.<span class="number">8</span> application starting <span class="keyword">in</span> development on <span class="symbol">http:</span>/<span class="regexp">/localhost:3000
</span></span>=<span class="ruby">&gt; <span class="constant">Run</span> <span class="string">'rails server -h'</span> <span class="keyword">for</span> more startup options
</span>=<span class="ruby">&gt; <span class="constant">Ctrl</span>-<span class="constant">C</span> to shutdown server</span>
</code></pre><p>我们根据提示，在浏览器访问<a href="http://localhost:3000" target="_blank" rel="external">http://localhost:3000</a>，出现如下页面，就说明你成功了。</p>
<p><img src="/img/rails-hello-world-page.png" alt=""></p>
<h2 id="关于刚刚提到的64位的问题">关于刚刚提到的64位的问题</h2>
<p>如果你安装的是64位的Ruby的话，在创建Rails的Hello World项目是可能会遇到下面的错误：</p>
<pre><code>No timezone data source could be found. To resolve this, either install 
<span class="label">TZInfo::</span>Data (e.g. by running <span class="escape">`g</span>em install tzinfo-data<span class="escape">`)</span> <span class="literal">or</span> specify <span class="literal">a</span> zoneinfo 
<span class="label">directory using `TZInfo::</span>DataSource.set(:zoneinfo, zoneinfo_path)<span class="escape">`.</span>
<span class="label">(TZInfo::</span>DataSourceNotFound) 
</code></pre><p>这是由于rails的依赖组件tzinfo-data默认情况下没有安装64位版本。<br>解决的办法是，在创建的rails应用目录下找到gemfile文件，找到如下代码：</p>
<pre><code>gem <span class="string">'tzinfo-data'</span>, <span class="symbol">platforms:</span> [<span class="symbol">:mingw</span>, <span class="symbol">:mswin</span>]
</code></pre><p>改为：</p>
<pre><code>gem <span class="string">'tzinfo-data'</span>, <span class="symbol">platforms:</span> [<span class="symbol">:mingw</span>, <span class="symbol">:mswin</span>, <span class="symbol">:x64_mingw</span>]
</code></pre><p>然后输入命令：</p>
<pre><code>$ bundle <span class="keyword">update</span>
</code></pre><p>等待下载完成后重启服务器即可。</p>
<p>关于这个问题，在StackOverFlow上的相关链接<br><a href="http://stackoverflow.com/questions/23022258/tzinfodatasourcenotfound-error-starting-rails-v4-1-0-server-on-windows" target="_blank" rel="external">http://stackoverflow.com/questions/23022258/tzinfodatasourcenotfound-error-starting-rails-v4-1-0-server-on-windows</a></p>
<p>其实如果你直接安装32位版本的Ruby，就不会存在这个问题。</p>
<h2 id="可能会有Sqlite3的错误">可能会有Sqlite3的错误</h2>
<p>Rails4默认使用Sqlite作为默认配置的数据库解决方案。如果在运行Rails程序中出现关于sqlite的错误，到这个页面<a href="http://www.sqlite.org/download.html" target="_blank" rel="external">http://www.sqlite.org/download.html</a>，找到<code>Precompiled Binaries for Windows</code>的部分，下载<a href="http://www.sqlite.org/2014/sqlite-dll-win32-x86-3080702.zip" target="_blank" rel="external">sqlite-dll-win32-x86-3080702.zip</a>，解压后放到Path目录之中就行了。</p>
<h2 id="总结">总结</h2>
<p>整个安装过程还是十分简单容易的，如果你哪一步出了问题，请仔细的从头检查步骤。你也可以尝试给我发邮件进行交流，但是可能我并不一定有时间回复你。</p>
<p>最后推荐一本十分不错的Ruby on Rails入门教程《Ruby on Rails 教程》（原书第 3 版），你可以在<a href="http://railstutorial-china.org/" target="_blank" rel="external">http://railstutorial-china.org/</a>找到他的在线阅读版。在线阅读是免费的。当然你也可以付费买下电子版，给予翻译作者的回报。总之，这本书十分不错，如果你刚刚开始学习Rails，我强烈向你推荐。</p>
<p>最好，祝你好运~Have fun!</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2>
<p>这篇文章主要记录一些我个人在Windows上搭建Ruby on Rails开发环境时遇到的一些问题以及解决方案。</p>
]]>
    
    </summary>
    
      <category term="Ruby学习笔记" scheme="http://blog.takwolf.com/tags/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Ruby" scheme="http://blog.takwolf.com/tags/Ruby/"/>
    
      <category term="Ruby" scheme="http://blog.takwolf.com/categories/Ruby/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android跳转到应用市场详细信息页面，可用于实现评分或者推荐功能]]></title>
    <link href="http://blog.takwolf.com/2014/11/26/android-goto-app-market/"/>
    <id>http://blog.takwolf.com/2014/11/26/android-goto-app-market/</id>
    <published>2014-11-26T09:48:29.000Z</published>
    <updated>2014-11-26T10:38:49.000Z</updated>
    <content type="html"><![CDATA[<p>要实现的功能很简单，用户点击“给应用评分”按钮，就会跳转到应用商店的详细信息页面。或者点击“更多应用”按钮跳转到商店搜索页面搜索开发者的相关应用。</p>
<p>原理十分简单，构建一个<code>ACTION_VIEW</code>标记的<code>Intent</code>，并给一个如下结构的Uri即可：</p>
<pre><code><span class="string">"market://details?id="</span> + getPackageName() <span class="comment">//商店中使用包名来唯一标识区分应用</span>
</code></pre><p>在Android平台上，正常情况下手机中的应用商店应该是Google Play，但是由于各种你懂我也懂的原因，国内基本上无法使用Google Play服务。<br>好在广泛的第三方应用市场大多都实现了这个接口。</p>
<p>代码注释很详细：</p>
<pre><code><span class="comment">//这里开始执行一个应用市场跳转逻辑，默认this为Context上下文对象</span>
Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW);
intent.setData(Uri.parse(<span class="string">"market://details?id="</span> + getPackageName())); <span class="comment">//跳转到应用市场，非Google Play市场一般情况也实现了这个接口</span>
<span class="comment">//存在手机里没安装应用市场的情况，跳转会包异常，做一个接收判断</span>
<span class="keyword">if</span> (intent.resolveActivity(getPackageManager()) != <span class="literal">null</span>) { <span class="comment">//可以接收</span>
    startActivity(intent);
} <span class="keyword">else</span> { <span class="comment">//没有应用市场，我们通过浏览器跳转到Google Play</span>
    intent.setData(Uri.parse(<span class="string">"https://play.google.com/store/apps/details?id="</span> + getPackageName()));
    <span class="comment">//这里存在一个极端情况就是有些用户浏览器也没有，再判断一次</span>
    <span class="keyword">if</span> (intent.resolveActivity(getPackageManager()) != <span class="literal">null</span>) { <span class="comment">//有浏览器</span>
        startActivity(intent);
    } <span class="keyword">else</span> { <span class="comment">//天哪，这还是智能手机吗？</span>
        Toast.makeText(<span class="keyword">this</span>, <span class="string">"天啊，您没安装应用市场，连浏览器也没有，您买个手机干啥？"</span>, Toast.LENGTH_SHORT).show();
    }
}
</code></pre><p>需要注意的就是，如果界面跳转失败，会抛出异常，因此能否跳转需要进行判断。</p>
<p>根据以上，同理使用以下Uri进行替换：</p>
<pre><code>Uri.parse(<span class="string">"market://search?q=pub:Author Name"</span>); <span class="comment">//跳转到商店搜索界面，并搜索开发者姓名</span>
Uri.parse(<span class="string">"market://search?q=Keyword"</span>); <span class="comment">//跳转到商店搜索界面，并搜索关键词</span>
</code></pre><p>参考链接：<br><a href="http://stackoverflow.com/questions/4702204/android-market-detailsid-not-working-for-app" target="_blank" rel="external">http://stackoverflow.com/questions/4702204/android-market-detailsid-not-working-for-app</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>要实现的功能很简单，用户点击“给应用评分”按钮，就会跳转到应用商店的详细信息页面。或者点击“更多应用”按钮跳转到商店搜索页面搜索开发者的相关应用。</p>
<p>原理十分简单，构建一个<code>ACTION_VIEW</code>标记的<code>Intent</code]]>
    </summary>
    
      <category term="Android" scheme="http://blog.takwolf.com/tags/Android/"/>
    
      <category term="应用市场" scheme="http://blog.takwolf.com/tags/%E5%BA%94%E7%94%A8%E5%B8%82%E5%9C%BA/"/>
    
      <category term="Android" scheme="http://blog.takwolf.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git的一般化使用流程]]></title>
    <link href="http://blog.takwolf.com/2014/11/26/normal-step-of-use-git/"/>
    <id>http://blog.takwolf.com/2014/11/26/normal-step-of-use-git/</id>
    <published>2014-11-25T19:06:06.000Z</published>
    <updated>2014-11-25T19:54:18.000Z</updated>
    <content type="html"><![CDATA[<p>对于Git，平时我愿意使用SourceTree（本人是Windows环境），命令使用的比较少。这里对Git的一般化使用流程做一个总结，也作为一个快速查找手册。</p>
<a id="more"></a>

<p>使用Git前，需要进行全局配置。该配置对整个系统有效，只需配置一次。以本人的情况为例：</p>
<pre><code>$ git config --<span class="keyword">global</span> user.name <span class="string">"TakWolf"</span>
$ git config --<span class="keyword">global</span> user.email takwolf<span class="variable">@foxmail</span>.com
$ git config --<span class="keyword">global</span> push.<span class="keyword">default</span> matching
$ git config --<span class="keyword">global</span> <span class="keyword">alias</span>.co checkout
</code></pre><p>我们假设已经创建了一个应用，通过cd命令进入目录：</p>
<pre><code>$ <span class="built_in">cd</span> workspace/hello_world_app
</code></pre><p>首先初始化git：</p>
<pre><code><span class="variable">$ </span>git init
</code></pre><p>将所有文件放到仓库暂存区中：</p>
<pre><code>$ git <span class="built_in">add</span> -A
</code></pre><p>提交一个commit:</p>
<pre><code><span class="variable">$ </span>git commit -m <span class="string">"Initialize repository"</span>
</code></pre><p>以上两个命令可以合并为：</p>
<pre><code>$ git commit <span class="operator">-a</span> -m <span class="string">"commit all"</span>
</code></pre><p>或者</p>
<pre><code>$ git commit -<span class="keyword">am</span> <span class="string">"commit all"</span>
</code></pre><p>配置远端地址：</p>
<pre><code>$ git remote <span class="built_in">add</span> origin http<span class="variable">s:</span>//github.<span class="keyword">com</span>/takwolf/hello-world-app.git
</code></pre><p>推送到远端master分支：</p>
<pre><code><span class="variable">$ </span>git push origin master
</code></pre><hr>
<p>命令的一些说明</p>
<p>创建一个分支：</p>
<pre><code><span class="variable">$ </span>git branch &lt;新分支名字&gt;
</code></pre><p>切换到新分支:</p>
<pre><code><span class="variable">$ </span>git checkout &lt;新分支名字&gt;
</code></pre><p>加入一个新的远程端：</p>
<pre><code><span class="input"><span class="prompt">$ git remote add &lt;远程端名字&gt;</span> &lt;地址&gt;</span>
</code></pre><p>推送分支：</p>
<pre><code><span class="variable">$ </span>git push origin &lt;新分支名字&gt;
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>对于Git，平时我愿意使用SourceTree（本人是Windows环境），命令使用的比较少。这里对Git的一般化使用流程做一个总结，也作为一个快速查找手册。</p>
]]>
    
    </summary>
    
      <category term="git" scheme="http://blog.takwolf.com/tags/git/"/>
    
      <category term="git" scheme="http://blog.takwolf.com/categories/git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android录音生成m4a格式音频]]></title>
    <link href="http://blog.takwolf.com/2014/10/31/android-audio-record/"/>
    <id>http://blog.takwolf.com/2014/10/31/android-audio-record/</id>
    <published>2014-10-31T07:12:49.000Z</published>
    <updated>2014-11-25T19:46:56.000Z</updated>
    <content type="html"><![CDATA[<p>一篇博文，十分详细，暂时记录</p>
<p><a href="http://blog.csdn.net/yegongheng/article/details/40624267" target="_blank" rel="external">http://blog.csdn.net/yegongheng/article/details/40624267</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>一篇博文，十分详细，暂时记录</p>
<p><a href="http://blog.csdn.net/yegongheng/article/details/40624267" target="_blank" rel="external">http://blog.csdn.]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android实现视频播放]]></title>
    <link href="http://blog.takwolf.com/2014/10/16/android-video-view/"/>
    <id>http://blog.takwolf.com/2014/10/16/android-video-view/</id>
    <published>2014-10-16T02:48:42.000Z</published>
    <updated>2014-10-16T03:52:41.000Z</updated>
    <content type="html"><![CDATA[<p>提到视频播放，有这么几种方法。</p>
<p>1.调用系统播放器</p>
<pre><code><span class="constant">Uri uri</span> = Uri.parse(Environment.getExternalStorageDirectory().getPath()+<span class="string">"/video.mp4"</span>);  
<span class="constant">Intent intent</span> = new Intent(Intent.ACTION_VIEW);
intent.setDataAndType(uri, <span class="string">"video/mp4"</span>); <span class="comment">//这句不要忘记，表明资源是视频类型</span>
startActivity(intent);
</code></pre><p>2.使用MediaPlayer和SurfaceView</p>
<p>说实话，这种方式太过麻烦，代码就不粘贴了。其实还有更简单的下面的第三种方法。</p>
<p>3.使用VideoView</p>
<p>这个本身就是为了播放视频而设计的控件。通过查看基础树我们发现，其实他就是继承了SurfaceView并且实现了MediaPlayerControl，实质是第二种方式的一个封装，而使用起来要方便很多，视频在 start 调用之后自动加载，你也不需要去手动释放资源，控件都帮你处理了。</p>
<p>一个非常简单的例子：</p>
<pre><code>videoView = (VideoView) findViewById(R.id.video_view);
videoView.setMediaController(<span class="keyword">new</span> MediaController(<span class="keyword">this</span>));
Uri uri = Uri.parse(Environment.getExternalStorageDirectory().getPath()+<span class="string">"/video.mp4"</span>);
videoView.setVideoURI(uri);
videoView.start();
</code></pre><p>上面代码中的 setMediaController 可以添加一个媒体控制器，这是一个默认实现的控件，包括进度，暂停神马的，如果没有特殊的要求，功能基本也就够用了。当然，你也可以自己来实现。VideoView本身也提供媒体控制接口和监听器。</p>
<p>Android系统默认支持的视频格式如下：</p>
<pre><code><span class="comment">//Video</span>
addFileType(<span class="string">"MP4"</span>, FILE_TYPE_MP4, <span class="string">"video/mp4"</span>);
addFileType(<span class="string">"M4V"</span>, FILE_TYPE_M4V, <span class="string">"video/mp4"</span>);
addFileType(<span class="string">"3GP"</span>, FILE_TYPE_3GPP, <span class="string">"video/3gpp"</span>);
addFileType(<span class="string">"3GPP"</span>, FILE_TYPE_3GPP, <span class="string">"video/3gpp"</span>);
addFileType(<span class="string">"3G2"</span>, FILE_TYPE_3GPP2, <span class="string">"video/3gpp2"</span>);
addFileType(<span class="string">"3GPP2"</span>, FILE_TYPE_3GPP2, <span class="string">"video/3gpp2"</span>);
addFileType(<span class="string">"WMV"</span>, FILE_TYPE_WMV, <span class="string">"video/x-ms-wmv"</span>);
</code></pre><p>这里还有一个问题要特殊说明一下，VideoView 加载视频需要通过 Uri 或者 Path。上面的代码是从 SDCard 中加载视频的,Uri的构筑方式是：</p>
<pre><code><span class="constant">Uri uri</span> = Uri.parse(Environment.getExternalStorageDirectory().getPath()+<span class="string">"/video.mp4"</span>);
</code></pre><p>当然，有的时候我们可能并不是要制作一个视频播放器，而是仅仅加载一些应用内置视频，做些产品或者功能演示神马的。我们的第一个思路是将视频文件放到assets资源目录下。实际编码中我们发现AssetManager竟然不能够直接获取Path，也无法直接构筑Uri。我们按照以往的经验:</p>
<pre><code>WebView webView = <span class="keyword">new</span> WebView(<span class="keyword">this</span>);
webView.loadUrl(<span class="keyword">file</span>:<span class="comment">///android_asset/index.html);</span>
</code></pre><p>实测这种方式在VideoView中无效，控件会提示视频无法播放，从调试信息来看，应该是控件无法找到视频路径。</p>
<p>百度和Google基本无方案，stackoverflow上有一个解答：<a href="http://stackoverflow.com/questions/3746361/i-want-to-play-a-video-from-my-assets-or-raw-folder" target="_blank" rel="external">链接</a></p>
<p>最终的方案是这样的：将视频文件放到 res/raw 文件夹中（注意res资源的命名规则） ，然后通过包名和 R 中的资源编号构筑Uri</p>
<pre><code><span class="constant">Uri uri</span> = Uri.parse(<span class="string">"android.resource://"</span> + getPackageName() + <span class="string">"/"</span> + R.raw.video);
</code></pre><p>最终的代码：</p>
<pre><code>videoView = (VideoView) findViewById(R.id.video_view);
videoView.setMediaController(<span class="keyword">new</span> MediaController(<span class="keyword">this</span>));
Uri uri = Uri.parse(<span class="string">"android.resource://"</span> + getPackageName() + <span class="string">"/"</span> + R.raw.video);
videoView.setVideoURI(uri);
videoView.start();
</code></pre><p>问题解决。</p>
<p>最后附上一个<a href="http://www.open-open.com/lib/view/open1341754267229.html" target="_blank" rel="external">链接</a>，这里有三种比较详细的视频播放例子，主要是有一个MediaPlay的例子，虽然没用，但留个备份。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>提到视频播放，有这么几种方法。</p>
<p>1.调用系统播放器</p>
<pre><code><span class="constant">Uri uri</span> = Uri.parse(Environment.getExternalStorageDirectory]]>
    </summary>
    
      <category term="Android" scheme="http://blog.takwolf.com/tags/Android/"/>
    
      <category term="视频播放" scheme="http://blog.takwolf.com/tags/%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE/"/>
    
      <category term="文件路径" scheme="http://blog.takwolf.com/tags/%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84/"/>
    
      <category term="Android" scheme="http://blog.takwolf.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[对我大学参加过的计算机创业团队部分人的一些牢骚]]></title>
    <link href="http://blog.takwolf.com/2014/10/08/to-my-college-team/"/>
    <id>http://blog.takwolf.com/2014/10/08/to-my-college-team/</id>
    <published>2014-10-08T13:55:05.000Z</published>
    <updated>2014-10-08T14:54:10.000Z</updated>
    <content type="html"><![CDATA[<p>这是我对我大学参加过的计算机创业团队部分人的一些牢骚。</p>
<p>牢骚的对象是那些在团队中呆了好长时间了，自己也觉得搞了好几年技术了，还是啥也不会的人。</p>
<p>仅仅是个吐槽，切勿实际关联。</p>
<p>为什么你搞了这么久，还是啥名堂也没有搞出来，你思考过吗？</p>
<a id="more"></a>

<p>我的四点牢骚：</p>
<ol>
<li><p>别再去图书馆借内些个破书看了。不仅浪费时间，还误人子弟。官方网站上都有最权威的文档和实例代码，你不看，非要去看内些二流写手照抄翻译过来的“技术著作”，还怪你学不好。看书不是不可以，你要是真想看书，就百度看看你当前研究的技术方向上哪本书书评最好，去当当买回来看。</p>
</li>
<li><p>别去学内些个没用的东西，浪费时间。你去Google和Github上搜索一下，看看现在开发社区都流行什么语言，大家都在用什么框架，大牛们都在用什么开发工具。你要是还在大学机房里面在内个破机器上用VC6.0做上机实验，你就趁早别做了。</p>
</li>
<li><p>评估一下你自己到底适不适合搞计算机。别以为你对计算机很感兴趣，还进了创业团队，就代表你有天赋。努力不代表你有才能。你搞了两天两宿，连个Hello World都跑不起来，你还搞啥计算机。</p>
</li>
<li><p>你自己亲自尝试过解决问题吗？出现技术问题，如果恰巧是我的研究方向，你可以来问我。我晚上QQ基本都在线，也愿意跟别人讨论技术。但是我不能手把手教你。我只能给你个思路和方向，回答一些有价值的问题。就像环境搭建这种基础性的问题，百度一下，有的是答案。你百度都不愿意，我也教不了你。</p>
</li>
</ol>
<p>最后我在啰嗦几句，以上都是作为一个过来人的一些看法，作为一个学长的一些经验。本人之前走过很多弯路，浪费了很多时间，好在最后还算上了道。我希望我的学弟（当然如果能有学妹更好）学习的时候不再犯我之前犯过的2B错误。</p>
<p>意见给你提了，听不听在你。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是我对我大学参加过的计算机创业团队部分人的一些牢骚。</p>
<p>牢骚的对象是那些在团队中呆了好长时间了，自己也觉得搞了好几年技术了，还是啥也不会的人。</p>
<p>仅仅是个吐槽，切勿实际关联。</p>
<p>为什么你搞了这么久，还是啥名堂也没有搞出来，你思考过吗？</p>
]]>
    
    </summary>
    
      <category term="吐槽" scheme="http://blog.takwolf.com/tags/tucao/"/>
    
      <category term="吐槽" scheme="http://blog.takwolf.com/categories/tucao/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[博客迁移完毕]]></title>
    <link href="http://blog.takwolf.com/2014/10/06/blog-finished/"/>
    <id>http://blog.takwolf.com/2014/10/06/blog-finished/</id>
    <published>2014-10-05T18:03:58.000Z</published>
    <updated>2014-10-08T14:55:02.000Z</updated>
    <content type="html"><![CDATA[<p>国庆这几天别的事没干，折腾了好几宿，终于是吧个人博客搞定了。</p>
<a id="more"></a>

<p>之前写博客，也用了好几个平台了，CSDN、博客园、点点，也自己折腾过Wordpress啥的，都不是很满意。静态博客之前用过Jekyll，觉得不是很方便。现在的框架用的是Hexo，真心觉得简单方便好用啊。网站托管在gitcafe上，用法跟github page相同，但是国内访问速度真心不错啊。</p>
<p>现在逐渐的有时间了，博客会写的更多一些。之前写的一些也会整理一下慢慢迁移过来。Hexo的搭建，过段时间也会把方法和心得整理在博客上。总之从现在开始，重新开一个好头吧。</p>
<p>Hexo的主页：<a href="http://hexo.io/" target="_blank" rel="external">http://hexo.io</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>国庆这几天别的事没干，折腾了好几宿，终于是吧个人博客搞定了。</p>
]]>
    
    </summary>
    
      <category term="hexo" scheme="http://blog.takwolf.com/tags/hexo/"/>
    
      <category term="吐槽" scheme="http://blog.takwolf.com/tags/tucao/"/>
    
      <category term="吐槽" scheme="http://blog.takwolf.com/categories/tucao/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[辽工大教务在线Android客户端v1.2.6发布]]></title>
    <link href="http://blog.takwolf.com/2014/09/23/lntuonline-build-30/"/>
    <id>http://blog.takwolf.com/2014/09/23/lntuonline-build-30/</id>
    <published>2014-09-22T17:31:21.000Z</published>
    <updated>2014-10-06T17:36:10.000Z</updated>
    <content type="html"><![CDATA[<p>辽工大教务在线Android客户端，v1.2.6已更新。全新的界面设计，更简洁更扁平。课程表支持本地缓存。增加意见反馈功能，随时随地进行吐槽。<a id="more"></a>低于1.2.0版本的应用安装会出现签名冲突错误，请先卸载旧版本再进行安装即可。</p>
<p><img src="/img/t1.png" alt=""><br><img src="/img/t2.png" alt=""><br><img src="/img/t3.png" alt=""><br><img src="/img/t4.png" alt=""><br><img src="/img/t5.png" alt=""></p>
<h3 id="下载地址：">下载地址：</h3>
<ul>
<li><p><a href="http://zhushou.360.cn/detail/index/soft_id/1964733?recrefer=SE_D_%E8%BE%BD%E5%B7%A5%E5%A4%A7%E6%95%99%E5%8A%A1%E5%9C%A8%E7%BA%BF" target="_blank" rel="external">360手机助手</a></p>
</li>
<li><p><a href="http://www.wandoujia.com/apps/com.lntu.online" target="_blank" rel="external">豌豆荚</a></p>
</li>
<li><p><a href="http://shouji.baidu.com/software/item?docid=7033610" target="_blank" rel="external">百度手机助手</a></p>
</li>
<li><p><a href="http://android.myapp.com/myapp/detail.htm?apkName=com.lntu.online" target="_blank" rel="external">应用宝</a></p>
</li>
<li><p><a href="http://apk.91.com/Soft/Android/com.lntu.online-30.html" target="_blank" rel="external">91手机助手</a></p>
</li>
<li><p><a href="http://static.sc.hiapk.com/appinfo/com.lntu.online" target="_blank" rel="external">安卓市场</a></p>
</li>
<li><p><a href="http://www.anzhi.com/soft_1863172.html" target="_blank" rel="external">安智市场</a></p>
</li>
<li><p><a href="http://www.mumayi.com/android-851065.html?1412616355" target="_blank" rel="external">木蚂蚁应用市场</a></p>
</li>
<li><p><a href="http://www.pgyer.com/azjwzx" target="_blank" rel="external">蒲公英</a></p>
</li>
</ul>
<p>在应用市场渠道下载的同学们，记得给好评哟~~O(∩_∩)O</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>辽工大教务在线Android客户端，v1.2.6已更新。全新的界面设计，更简洁更扁平。课程表支持本地缓存。增加意见反馈功能，随时随地进行吐槽。]]>
    
    </summary>
    
      <category term="Android" scheme="http://blog.takwolf.com/tags/Android/"/>
    
      <category term="lntuonline" scheme="http://blog.takwolf.com/tags/lntuonline/"/>
    
      <category term="作品" scheme="http://blog.takwolf.com/categories/works/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://blog.takwolf.com/2014/01/01/hello-world/"/>
    <id>http://blog.takwolf.com/2014/01/01/hello-world/</id>
    <published>2013-12-31T16:00:00.000Z</published>
    <updated>2014-10-13T15:31:42.000Z</updated>
    <content type="html"><![CDATA[<p>这是Hexo默认生成的一篇文章，也就是Hello World，内容是如何发布一篇文章。就把他保留下来吧！</p>
<a id="more"></a>

<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2>
<h3 id="Create_a_new_post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是Hexo默认生成的一篇文章，也就是Hello World，内容是如何发布一篇文章。就把他保留下来吧！</p>
]]>
    
    </summary>
    
  </entry>
  
</feed>
