<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[TakWolf]]></title>
  <subtitle><![CDATA[我叫幻影狼人，是一个苦逼但又快乐的程序猿]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.takwolf.com/"/>
  <updated>2014-10-19T06:49:06.985Z</updated>
  <id>http://blog.takwolf.com/</id>
  
  <author>
    <name><![CDATA[TakWolf]]></name>
    <email><![CDATA[takwolf@foxmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Android实现视频播放]]></title>
    <link href="http://blog.takwolf.com/2014/10/16/android-video-view/"/>
    <id>http://blog.takwolf.com/2014/10/16/android-video-view/</id>
    <published>2014-10-16T02:48:42.000Z</published>
    <updated>2014-10-16T03:52:41.000Z</updated>
    <content type="html"><![CDATA[<p>提到视频播放，有这么几种方法。</p>
<p>1.调用系统播放器</p>
<pre><code><span class="constant">Uri uri</span> = Uri.parse(Environment.getExternalStorageDirectory().getPath()+<span class="string">"/video.mp4"</span>);  
<span class="constant">Intent intent</span> = new Intent(Intent.ACTION_VIEW);
intent.setDataAndType(uri, <span class="string">"video/mp4"</span>); <span class="comment">//这句不要忘记，表明资源是视频类型</span>
startActivity(intent);
</code></pre><p>2.使用MediaPlayer和SurfaceView</p>
<p>说实话，这种方式太过麻烦，代码就不粘贴了。其实还有更简单的下面的第三种方法。</p>
<p>3.使用VideoView</p>
<p>这个本身就是为了播放视频而设计的控件。通过查看基础树我们发现，其实他就是继承了SurfaceView并且实现了MediaPlayerControl，实质是第二种方式的一个封装，而使用起来要方便很多，视频在 start 调用之后自动加载，你也不需要去手动释放资源，控件都帮你处理了。</p>
<p>一个非常简单的例子：</p>
<pre><code>videoView = (VideoView) findViewById(R.id.video_view);
videoView.setMediaController(<span class="keyword">new</span> MediaController(<span class="keyword">this</span>));
Uri uri = Uri.parse(Environment.getExternalStorageDirectory().getPath()+<span class="string">"/video.mp4"</span>);
videoView.setVideoURI(uri);
videoView.start();
</code></pre><p>上面代码中的 setMediaController 可以添加一个媒体控制器，这是一个默认实现的控件，包括进度，暂停神马的，如果没有特殊的要求，功能基本也就够用了。当然，你也可以自己来实现。VideoView本身也提供媒体控制接口和监听器。</p>
<p>Android系统默认支持的视频格式如下：</p>
<pre><code><span class="comment">//Video</span>
addFileType(<span class="string">"MP4"</span>, FILE_TYPE_MP4, <span class="string">"video/mp4"</span>);
addFileType(<span class="string">"M4V"</span>, FILE_TYPE_M4V, <span class="string">"video/mp4"</span>);
addFileType(<span class="string">"3GP"</span>, FILE_TYPE_3GPP, <span class="string">"video/3gpp"</span>);
addFileType(<span class="string">"3GPP"</span>, FILE_TYPE_3GPP, <span class="string">"video/3gpp"</span>);
addFileType(<span class="string">"3G2"</span>, FILE_TYPE_3GPP2, <span class="string">"video/3gpp2"</span>);
addFileType(<span class="string">"3GPP2"</span>, FILE_TYPE_3GPP2, <span class="string">"video/3gpp2"</span>);
addFileType(<span class="string">"WMV"</span>, FILE_TYPE_WMV, <span class="string">"video/x-ms-wmv"</span>);
</code></pre><p>这里还有一个问题要特殊说明一下，VideoView 加载视频需要通过 Uri 或者 Path。上面的代码是从 SDCard 中加载视频的,Uri的构筑方式是：</p>
<pre><code><span class="constant">Uri uri</span> = Uri.parse(Environment.getExternalStorageDirectory().getPath()+<span class="string">"/video.mp4"</span>);
</code></pre><p>当然，有的时候我们可能并不是要制作一个视频播放器，而是仅仅加载一些应用内置视频，做些产品或者功能演示神马的。我们的第一个思路是将视频文件放到assets资源目录下。实际编码中我们发现AssetManager竟然不能够直接获取Path，也无法直接构筑Uri。我们按照以往的经验:</p>
<pre><code>WebView webView = <span class="keyword">new</span> WebView(<span class="keyword">this</span>);
webView.loadUrl(<span class="keyword">file</span>:<span class="comment">///android_asset/index.html);</span>
</code></pre><p>实测这种方式在VideoView中无效，控件会提示视频无法播放，从调试信息来看，应该是控件无法找到视频路径。</p>
<p>百度和Google基本无方案，stackoverflow上有一个解答：<a href="http://stackoverflow.com/questions/3746361/i-want-to-play-a-video-from-my-assets-or-raw-folder" target="_blank" rel="external">链接</a></p>
<p>最终的方案是这样的：将视频文件放到 res/raw 文件夹中（注意res资源的命名规则） ，然后通过包名和 R 中的资源编号构筑Uri</p>
<pre><code><span class="constant">Uri uri</span> = Uri.parse(<span class="string">"android.resource://"</span> + getPackageName() + <span class="string">"/"</span> + R.raw.video);
</code></pre><p>最终的代码：</p>
<pre><code>videoView = (VideoView) findViewById(R.id.video_view);
videoView.setMediaController(<span class="keyword">new</span> MediaController(<span class="keyword">this</span>));
Uri uri = Uri.parse(<span class="string">"android.resource://"</span> + getPackageName() + <span class="string">"/"</span> + R.raw.video);
videoView.setVideoURI(uri);
videoView.start();
</code></pre><p>问题解决。</p>
<p>最后附上一个<a href="http://www.open-open.com/lib/view/open1341754267229.html" target="_blank" rel="external">链接</a>，这里有三种比较详细的视频播放例子，主要是有一个MediaPlay的例子，虽然没用，但留个备份。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>提到视频播放，有这么几种方法。</p>
<p>1.调用系统播放器</p>
<pre><code><span class="constant">Uri uri</span> = Uri.parse(Environment.getExternalStorageDirectory]]>
    </summary>
    
      <category term="Android" scheme="http://blog.takwolf.com/tags/Android/"/>
    
      <category term="视频播放" scheme="http://blog.takwolf.com/tags/%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE/"/>
    
      <category term="文件路径" scheme="http://blog.takwolf.com/tags/%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84/"/>
    
      <category term="Android" scheme="http://blog.takwolf.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android应用通过新浪微博登陆]]></title>
    <link href="http://blog.takwolf.com/2014/10/15/android-with-weibo-login/"/>
    <id>http://blog.takwolf.com/2014/10/15/android-with-weibo-login/</id>
    <published>2014-10-15T07:59:42.000Z</published>
    <updated>2014-10-15T08:01:34.000Z</updated>
    <content type="html"><![CDATA[<p>暂时记录，晚些时候整理</p>
<p><a href="https://github.com/sinaweibosdk/weibo_android_sdk" target="_blank" rel="external">https://github.com/sinaweibosdk/weibo_android_sdk</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>暂时记录，晚些时候整理</p>
<p><a href="https://github.com/sinaweibosdk/weibo_android_sdk" target="_blank" rel="external">https://github.com/sinaweib]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android应用通过QQ登陆]]></title>
    <link href="http://blog.takwolf.com/2014/10/15/android-with-qq-login/"/>
    <id>http://blog.takwolf.com/2014/10/15/android-with-qq-login/</id>
    <published>2014-10-15T07:59:29.000Z</published>
    <updated>2014-10-15T08:00:34.000Z</updated>
    <content type="html"><![CDATA[<p>临时记录</p>
<p><a href="http://wiki.open.qq.com/wiki/%E3%80%90QQ%E7%99%BB%E5%BD%95%E3%80%91Android_SDK%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" target="_blank" rel="external">http://wiki.open.qq.com/wiki/%E3%80%90QQ%E7%99%BB%E5%BD%95%E3%80%91Android_SDK%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>临时记录</p>
<p><a href="http://wiki.open.qq.com/wiki/%E3%80%90QQ%E7%99%BB%E5%BD%95%E3%80%91Android_SDK%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" ]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android通过MediaRecorder实现录音]]></title>
    <link href="http://blog.takwolf.com/2014/10/15/android-media-recorder/"/>
    <id>http://blog.takwolf.com/2014/10/15/android-media-recorder/</id>
    <published>2014-10-15T06:49:23.000Z</published>
    <updated>2014-10-15T06:53:31.000Z</updated>
    <content type="html"><![CDATA[<p>暂时记录几篇文章，稍后做一个整理</p>
<p>一个比较简单的录音实现</p>
<p><a href="http://blog.csdn.net/cxf7394373/article/details/8313980" target="_blank" rel="external">http://blog.csdn.net/cxf7394373/article/details/8313980</a></p>
<p>理论</p>
<p><a href="http://blog.csdn.net/chindroid/article/details/7715638" target="_blank" rel="external">http://blog.csdn.net/chindroid/article/details/7715638</a></p>
<p>暂停断点录音，手动合成每一个部分，该方法有待考究</p>
<p><a href="http://blog.csdn.net/wanli_smile/article/details/7715030" target="_blank" rel="external">http://blog.csdn.net/wanli_smile/article/details/7715030</a></p>
<p>检测路径是否存在，涉及子目录问题，咱记录</p>
<p><a href="http://www.cnblogs.com/fly_binbin/archive/2010/12/15/1907292.html" target="_blank" rel="external">http://www.cnblogs.com/fly_binbin/archive/2010/12/15/1907292.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>暂时记录几篇文章，稍后做一个整理</p>
<p>一个比较简单的录音实现</p>
<p><a href="http://blog.csdn.net/cxf7394373/article/details/8313980" target="_blank" rel="externa]]>
    </summary>
    
      <category term="Android" scheme="http://blog.takwolf.com/tags/Android/"/>
    
      <category term="录音" scheme="http://blog.takwolf.com/tags/%E5%BD%95%E9%9F%B3/"/>
    
      <category term="MediaRecorder" scheme="http://blog.takwolf.com/tags/MediaRecorder/"/>
    
      <category term="Android" scheme="http://blog.takwolf.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[对我大学参加过的计算机创业团队部分人的一些牢骚]]></title>
    <link href="http://blog.takwolf.com/2014/10/08/to-my-college-team/"/>
    <id>http://blog.takwolf.com/2014/10/08/to-my-college-team/</id>
    <published>2014-10-08T13:55:05.000Z</published>
    <updated>2014-10-08T14:54:10.000Z</updated>
    <content type="html"><![CDATA[<p>这是我对我大学参加过的计算机创业团队部分人的一些牢骚。</p>
<p>牢骚的对象是那些在团队中呆了好长时间了，自己也觉得搞了好几年技术了，还是啥也不会的人。</p>
<p>仅仅是个吐槽，切勿实际关联。</p>
<p>为什么你搞了这么久，还是啥名堂也没有搞出来，你思考过吗？</p>
<a id="more"></a>

<p>我的四点牢骚：</p>
<ol>
<li><p>别再去图书馆借内些个破书看了。不仅浪费时间，还误人子弟。官方网站上都有最权威的文档和实例代码，你不看，非要去看内些二流写手照抄翻译过来的“技术著作”，还怪你学不好。看书不是不可以，你要是真想看书，就百度看看你当前研究的技术方向上哪本书书评最好，去当当买回来看。</p>
</li>
<li><p>别去学内些个没用的东西，浪费时间。你去Google和Github上搜索一下，看看现在开发社区都流行什么语言，大家都在用什么框架，大牛们都在用什么开发工具。你要是还在大学机房里面在内个破机器上用VC6.0做上机实验，你就趁早别做了。</p>
</li>
<li><p>评估一下你自己到底适不适合搞计算机。别以为你对计算机很感兴趣，还进了创业团队，就代表你有天赋。努力不代表你有才能。你搞了两天两宿，连个Hello World都跑不起来，你还搞啥计算机。</p>
</li>
<li><p>你自己亲自尝试过解决问题吗？出现技术问题，如果恰巧是我的研究方向，你可以来问我。我晚上QQ基本都在线，也愿意跟别人讨论技术。但是我不能手把手教你。我只能给你个思路和方向，回答一些有价值的问题。就像环境搭建这种基础性的问题，百度一下，有的是答案。你百度都不愿意，我也教不了你。</p>
</li>
</ol>
<p>最后我在啰嗦几句，以上都是作为一个过来人的一些看法，作为一个学长的一些经验。本人之前走过很多弯路，浪费了很多时间，好在最后还算上了道。我希望我的学弟（当然如果能有学妹更好）学习的时候不再犯我之前犯过的2B错误。</p>
<p>意见给你提了，听不听在你。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是我对我大学参加过的计算机创业团队部分人的一些牢骚。</p>
<p>牢骚的对象是那些在团队中呆了好长时间了，自己也觉得搞了好几年技术了，还是啥也不会的人。</p>
<p>仅仅是个吐槽，切勿实际关联。</p>
<p>为什么你搞了这么久，还是啥名堂也没有搞出来，你思考过吗？</p>
]]>
    
    </summary>
    
      <category term="吐槽" scheme="http://blog.takwolf.com/tags/tucao/"/>
    
      <category term="吐槽" scheme="http://blog.takwolf.com/categories/tucao/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[博客迁移完毕]]></title>
    <link href="http://blog.takwolf.com/2014/10/06/blog-finished/"/>
    <id>http://blog.takwolf.com/2014/10/06/blog-finished/</id>
    <published>2014-10-05T18:03:58.000Z</published>
    <updated>2014-10-08T14:55:02.000Z</updated>
    <content type="html"><![CDATA[<p>国庆这几天别的事没干，折腾了好几宿，终于是吧个人博客搞定了。</p>
<a id="more"></a>

<p>之前写博客，也用了好几个平台了，CSDN、博客园、点点，也自己折腾过Wordpress啥的，都不是很满意。静态博客之前用过Jekyll，觉得不是很方便。现在的框架用的是Hexo，真心觉得简单方便好用啊。网站托管在gitcafe上，用法跟github page相同，但是国内访问速度真心不错啊。</p>
<p>现在逐渐的有时间了，博客会写的更多一些。之前写的一些也会整理一下慢慢迁移过来。Hexo的搭建，过段时间也会把方法和心得整理在博客上。总之从现在开始，重新开一个好头吧。</p>
<p>Hexo的主页：<a href="http://hexo.io/" target="_blank" rel="external">http://hexo.io</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>国庆这几天别的事没干，折腾了好几宿，终于是吧个人博客搞定了。</p>
]]>
    
    </summary>
    
      <category term="hexo" scheme="http://blog.takwolf.com/tags/hexo/"/>
    
      <category term="吐槽" scheme="http://blog.takwolf.com/tags/tucao/"/>
    
      <category term="吐槽" scheme="http://blog.takwolf.com/categories/tucao/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[辽工大教务在线Android客户端v1.2.6发布]]></title>
    <link href="http://blog.takwolf.com/2014/09/23/lntuonline-build-30/"/>
    <id>http://blog.takwolf.com/2014/09/23/lntuonline-build-30/</id>
    <published>2014-09-22T17:31:21.000Z</published>
    <updated>2014-10-06T17:36:10.000Z</updated>
    <content type="html"><![CDATA[<p>辽工大教务在线Android客户端，v1.2.6已更新。全新的界面设计，更简洁更扁平。课程表支持本地缓存。增加意见反馈功能，随时随地进行吐槽。<a id="more"></a>低于1.2.0版本的应用安装会出现签名冲突错误，请先卸载旧版本再进行安装即可。</p>
<p><img src="/img/t1.png" alt=""><br><img src="/img/t2.png" alt=""><br><img src="/img/t3.png" alt=""><br><img src="/img/t4.png" alt=""><br><img src="/img/t5.png" alt=""></p>
<h3 id="下载地址：">下载地址：</h3>
<ul>
<li><p><a href="http://zhushou.360.cn/detail/index/soft_id/1964733?recrefer=SE_D_%E8%BE%BD%E5%B7%A5%E5%A4%A7%E6%95%99%E5%8A%A1%E5%9C%A8%E7%BA%BF" target="_blank" rel="external">360手机助手</a></p>
</li>
<li><p><a href="http://www.wandoujia.com/apps/com.lntu.online" target="_blank" rel="external">豌豆荚</a></p>
</li>
<li><p><a href="http://shouji.baidu.com/software/item?docid=7033610" target="_blank" rel="external">百度手机助手</a></p>
</li>
<li><p><a href="http://android.myapp.com/myapp/detail.htm?apkName=com.lntu.online" target="_blank" rel="external">应用宝</a></p>
</li>
<li><p><a href="http://apk.91.com/Soft/Android/com.lntu.online-30.html" target="_blank" rel="external">91手机助手</a></p>
</li>
<li><p><a href="http://static.sc.hiapk.com/appinfo/com.lntu.online" target="_blank" rel="external">安卓市场</a></p>
</li>
<li><p><a href="http://www.anzhi.com/soft_1863172.html" target="_blank" rel="external">安智市场</a></p>
</li>
<li><p><a href="http://www.mumayi.com/android-851065.html?1412616355" target="_blank" rel="external">木蚂蚁应用市场</a></p>
</li>
<li><p><a href="http://www.pgyer.com/azjwzx" target="_blank" rel="external">蒲公英</a></p>
</li>
</ul>
<p>在应用市场渠道下载的同学们，记得给好评哟~~O(∩_∩)O</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>辽工大教务在线Android客户端，v1.2.6已更新。全新的界面设计，更简洁更扁平。课程表支持本地缓存。增加意见反馈功能，随时随地进行吐槽。]]>
    
    </summary>
    
      <category term="Android" scheme="http://blog.takwolf.com/tags/Android/"/>
    
      <category term="lntuonline" scheme="http://blog.takwolf.com/tags/lntuonline/"/>
    
      <category term="作品" scheme="http://blog.takwolf.com/categories/works/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://blog.takwolf.com/2014/01/01/hello-world/"/>
    <id>http://blog.takwolf.com/2014/01/01/hello-world/</id>
    <published>2013-12-31T16:00:00.000Z</published>
    <updated>2014-10-13T15:31:42.000Z</updated>
    <content type="html"><![CDATA[<p>这是Hexo默认生成的一篇文章，也就是Hello World，内容是如何发布一篇文章。就把他保留下来吧！</p>
<a id="more"></a>

<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2>
<h3 id="Create_a_new_post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是Hexo默认生成的一篇文章，也就是Hello World，内容是如何发布一篇文章。就把他保留下来吧！</p>
]]>
    
    </summary>
    
  </entry>
  
</feed>
